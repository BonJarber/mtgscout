from typing import Optional

from sqlalchemy.orm import Session

from app import crud
from app.models.{{lower_name}} import {{upper_name}}
from app.schemas.{{lower_name}} import {{upper_name}}Create
from app.tests.utils.utils import random_lower_string
{% if pydantic_types|length > 0 %}
from pydantic import {{ pydantic_types|join(', ') }}
{% endif %}


def create_random_{{lower_name}}(
        db: Session,
        *,
        {% for field in fields %}
        {% if field.name == "program_id" %}
        program_id: int,
        {% else %}
        {{field.name}}: Optional[{{field.type}}] = None,
        {% endif %}
        {% endfor %}
        ) -> {{upper_name}}:
    {% for field in fields %}
    {% if field.name != "program_id" %}
    if {{field.name}} is None:
        # TODO - Fill in proper field value
        {{field.name}} = random_lower_string()
    {% endif %}
    {% endfor %}

    {{lower_name}}_in = {{upper_name}}Create({% for field in fields%}{{field.name}}={{field.name}},{% endfor %})
    return crud.{{lower_name}}.create(db=db, obj_in={{lower_name}}_in)